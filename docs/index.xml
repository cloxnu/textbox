<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>textbox.js</title>
    <link>https://textbox.clox.nu/</link>
    <description>Recent content on textbox.js</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Dec 2021 20:06:48 +0800</lastBuildDate><atom:link href="https://textbox.clox.nu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Title, Message and Buttons</title>
      <link>https://textbox.clox.nu/docs/configuration/title-message-and-buttons/</link>
      <pubDate>Mon, 20 Dec 2021 00:19:25 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/configuration/title-message-and-buttons/</guid>
      <description>Title, Message and Buttons #  As a powerful ⚡️ UI component that can display a variety of different styles, we definitely don&amp;rsquo;t want to just use the default configuration, so here we start with three basic configurations: title, message and buttons.
Title #  Let&amp;rsquo;s start with the title.
textbox({ title: &amp;#39;Hello&amp;#39;, });  TRY  Did you see it? The title &amp;lsquo;Hello&amp;rsquo; appears in the title bar, let&amp;rsquo;s turn it to red:</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://textbox.clox.nu/docs/getting-started/</link>
      <pubDate>Sun, 19 Dec 2021 20:17:04 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/getting-started/</guid>
      <description>Getting Started #  Welcome again, this page will introduce the simplest usage of textbox and hopefully it will bring you the desire to continue exploring or to contribute to this project.
For now, textbox is still in beta, but you can still copy the textbox.js code here.  The simplest usage #  textbox();  TRY  If everything works, you will see the following result after pressing TRY. If not, please contact us.</description>
    </item>
    
    <item>
      <title>Preset</title>
      <link>https://textbox.clox.nu/docs/configuration/preset/</link>
      <pubDate>Tue, 21 Dec 2021 13:20:36 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/configuration/preset/</guid>
      <description>Preset #  Overview #  Preset can add a &amp;lsquo;preset&amp;rsquo; value to the configuration in advance, for example, you can preset the function of the button, and then you don&amp;rsquo;t need to specify the button in the real configuration. Sometimes a lot of common code can be eliminated.
const oneDollarPayment = { btn_text: &amp;#39;Pay $1&amp;#39;, btn_callback() { textbox({ title: &amp;#39;Thanks!&amp;#39;, message: &amp;#39;Successful payment!&amp;#39;, }); return true; }, }; textbox({ title: &amp;#39;Check the order&amp;#39;, message: &amp;#39;Buy 5 diamonds&amp;#39;, preset: oneDollarPayment, });  TRY  Priority #  Preset will not overwrite the part of the current configuration that overlaps with the preset configuration, i.</description>
    </item>
    
    <item>
      <title>Alias</title>
      <link>https://textbox.clox.nu/docs/configuration/alias/</link>
      <pubDate>Tue, 21 Dec 2021 15:00:00 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/configuration/alias/</guid>
      <description>Alias #   You&amp;rsquo;ll be surprised to know that when you want to use buttons, it works fine whether you use button or buttons in the textbox configuration.
 Overview #  Alias helps to replace complex key with simpler one in the configuration. For example, you can alias m to message, so you can configure messages with m in the configuration.
textbox({ alias: { m: &amp;#39;message&amp;#39;, }, m: &amp;#39;I am message!</description>
    </item>
    
    <item>
      <title>Update</title>
      <link>https://textbox.clox.nu/docs/configuration/update/</link>
      <pubDate>Thu, 30 Dec 2021 10:36:51 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/configuration/update/</guid>
      <description>Update #  If you want to change the content or style of the textbox, try update.
Overview #  textbox({ title: &amp;#39;Original Title&amp;#39;, btn_text: &amp;#39;Change Title&amp;#39;, btn_callback(tb) { tb.update({ title: &amp;#39;Updated Title&amp;#39;, }); }, });  TRY  </description>
    </item>
    
    <item>
      <title>Input</title>
      <link>https://textbox.clox.nu/docs/documentation/component/input/</link>
      <pubDate>Sat, 01 Jan 2022 19:49:17 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/documentation/component/input/</guid>
      <description>Input #  The input component.
Declaration #  Input: Component Configuration #  Attributes #  value: string ~&amp;gt; value type: string ~&amp;gt; type placeholder: string ~&amp;gt; placeholder max_length: number ~&amp;gt; maxLength Configuration item ~&amp;gt; corresponding element attribute.
type: The content type of the input element. possible values
Basic #  focus_when_showing: boolean Auto-focus when box is visible. (default true)</description>
    </item>
    
    <item>
      <title>InputTextBox</title>
      <link>https://textbox.clox.nu/docs/documentation/box/inputtextbox/</link>
      <pubDate>Sat, 01 Jan 2022 19:46:43 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/documentation/box/inputtextbox/</guid>
      <description>InputTextBox #  The textbox with input component.
Declaration #  InputTextBox: TextBox Preset #  { alias: { &#39;input_text&#39;: [&#39;input&#39;, &#39;value&#39;], &#39;input_type&#39;: [&#39;input&#39;, &#39;type&#39;], &#39;placeholder&#39;: [&#39;input&#39;, &#39;placeholder&#39;], &#39;max_length&#39;: [&#39;input&#39;, &#39;max_length&#39;], } } Configuration #  input: Input </description>
    </item>
    
    <item>
      <title>TextBox</title>
      <link>https://textbox.clox.nu/docs/documentation/box/textbox/</link>
      <pubDate>Fri, 31 Dec 2021 21:09:25 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/documentation/box/textbox/</guid>
      <description>TextBox #  The textbox.
Declaration #  TextBox: BaseBox Preset #  { alias: { &#39;button&#39;: &#39;buttons&#39;, &#39;btn_text&#39;: [&#39;button&#39;, &#39;text&#39;], &#39;btn_callback&#39;: [&#39;button&#39;, &#39;callback&#39;], } } Configuration #  message: Message buttons: ButtonGroup </description>
    </item>
    
    <item>
      <title>Container</title>
      <link>https://textbox.clox.nu/docs/documentation/component/container/</link>
      <pubDate>Fri, 31 Dec 2021 21:02:18 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/documentation/component/container/</guid>
      <description>Container #  Container holds multiple components whose element is a div tag that is their parent node.
Declaration #  Container: Component </description>
    </item>
    
    <item>
      <title>ButtonGroup</title>
      <link>https://textbox.clox.nu/docs/documentation/component/buttongroup/</link>
      <pubDate>Fri, 31 Dec 2021 20:54:28 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/documentation/component/buttongroup/</guid>
      <description>ButtonGroup #  The combined component including multiple button components.
Declaration #  ButtonGroup: Component Configuration #  buttons: string[] | string | Button[] | Button </description>
    </item>
    
    <item>
      <title>Button</title>
      <link>https://textbox.clox.nu/docs/documentation/component/button/</link>
      <pubDate>Fri, 31 Dec 2021 20:45:36 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/documentation/component/button/</guid>
      <description>Button #  The button component.
Declaration #  Button: Component Configuration #  text: string The text content of button component.
callback: (_?: BaseBox) =&amp;gt; boolean The called callback after the button is clicked.
style: string The style of button. Valid values:
 default (default) submit cancel waiting destroy img none  </description>
    </item>
    
    <item>
      <title>Message</title>
      <link>https://textbox.clox.nu/docs/documentation/component/message/</link>
      <pubDate>Fri, 31 Dec 2021 18:17:46 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/documentation/component/message/</guid>
      <description>Message #  The message component.
Declaration #  Message: Component Configuration #  content: string The content of message component.</description>
    </item>
    
    <item>
      <title>BaseBox</title>
      <link>https://textbox.clox.nu/docs/documentation/box/basebox/</link>
      <pubDate>Fri, 31 Dec 2021 18:13:32 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/documentation/box/basebox/</guid>
      <description>BaseBox #  The most basic box.
Declaration #  BaseBox: Component Prototype #  render: () =&amp;gt; void Render and display this box. (Animate)
show: () =&amp;gt; void Show this box from hidden state. (Animate)
hide: () =&amp;gt; void Hide this box from non-hidden state. (Animate)
destroy: (completion?: () =&amp;gt; void) =&amp;gt; void Destroy this box, and completion will be called when box is completely destroyed. (Animate)
remove: () =&amp;gt; void Remove this box instantly.</description>
    </item>
    
    <item>
      <title>TextBox</title>
      <link>https://textbox.clox.nu/docs/textbox/</link>
      <pubDate>Sun, 19 Dec 2021 20:12:39 +0800</pubDate>
      
      <guid>https://textbox.clox.nu/docs/textbox/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
